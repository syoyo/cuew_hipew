// This file is automatically generated.

#include <stdint.h>


#include <stddef.h>

#ifdef __cplusplus
extern "C" {
#endif


#ifndef CUDAAPI
#ifdef _WIN32
#  define CUDAAPI __stdcall
#  define CUDA_CB __stdcall
#else
#  define CUDAAPI
#  define CUDA_CB
#endif
#endif

struct dim3
{
    unsigned int x, y, z;
};
typedef struct dim3 dim3;

struct cudaChannelFormatDesc;

    enum cudaRoundMode
{
  cudaRoundNearest,
  cudaRoundZero,
  cudaRoundPosInf,
  cudaRoundMinInf
}; // id 0xba7f48 

enum cudaError
{
  cudaSuccess = 0,
  cudaErrorInvalidValue = 1,
  cudaErrorMemoryAllocation = 2,
  cudaErrorInitializationError = 3,
  cudaErrorCudartUnloading = 4,
  cudaErrorProfilerDisabled = 5,
  cudaErrorProfilerNotInitialized = 6,
  cudaErrorProfilerAlreadyStarted = 7,
  cudaErrorProfilerAlreadyStopped = 8,
  cudaErrorInvalidConfiguration = 9,
  cudaErrorInvalidPitchValue = 12,
  cudaErrorInvalidSymbol = 13,
  cudaErrorInvalidHostPointer = 16,
  cudaErrorInvalidDevicePointer = 17,
  cudaErrorInvalidTexture = 18,
  cudaErrorInvalidTextureBinding = 19,
  cudaErrorInvalidChannelDescriptor = 20,
  cudaErrorInvalidMemcpyDirection = 21,
  cudaErrorAddressOfConstant = 22,
  cudaErrorTextureFetchFailed = 23,
  cudaErrorTextureNotBound = 24,
  cudaErrorSynchronizationError = 25,
  cudaErrorInvalidFilterSetting = 26,
  cudaErrorInvalidNormSetting = 27,
  cudaErrorMixedDeviceExecution = 28,
  cudaErrorNotYetImplemented = 31,
  cudaErrorMemoryValueTooLarge = 32,
  cudaErrorStubLibrary = 34,
  cudaErrorInsufficientDriver = 35,
  cudaErrorCallRequiresNewerDriver = 36,
  cudaErrorInvalidSurface = 37,
  cudaErrorDuplicateVariableName = 43,
  cudaErrorDuplicateTextureName = 44,
  cudaErrorDuplicateSurfaceName = 45,
  cudaErrorDevicesUnavailable = 46,
  cudaErrorIncompatibleDriverContext = 49,
  cudaErrorMissingConfiguration = 52,
  cudaErrorPriorLaunchFailure = 53,
  cudaErrorLaunchMaxDepthExceeded = 65,
  cudaErrorLaunchFileScopedTex = 66,
  cudaErrorLaunchFileScopedSurf = 67,
  cudaErrorSyncDepthExceeded = 68,
  cudaErrorLaunchPendingCountExceeded = 69,
  cudaErrorInvalidDeviceFunction = 98,
  cudaErrorNoDevice = 100,
  cudaErrorInvalidDevice = 101,
  cudaErrorDeviceNotLicensed = 102,
  cudaErrorSoftwareValidityNotEstablished = 103,
  cudaErrorStartupFailure = 127,
  cudaErrorInvalidKernelImage = 200,
  cudaErrorDeviceUninitialized = 201,
  cudaErrorMapBufferObjectFailed = 205,
  cudaErrorUnmapBufferObjectFailed = 206,
  cudaErrorArrayIsMapped = 207,
  cudaErrorAlreadyMapped = 208,
  cudaErrorNoKernelImageForDevice = 209,
  cudaErrorAlreadyAcquired = 210,
  cudaErrorNotMapped = 211,
  cudaErrorNotMappedAsArray = 212,
  cudaErrorNotMappedAsPointer = 213,
  cudaErrorECCUncorrectable = 214,
  cudaErrorUnsupportedLimit = 215,
  cudaErrorDeviceAlreadyInUse = 216,
  cudaErrorPeerAccessUnsupported = 217,
  cudaErrorInvalidPtx = 218,
  cudaErrorInvalidGraphicsContext = 219,
  cudaErrorNvlinkUncorrectable = 220,
  cudaErrorJitCompilerNotFound = 221,
  cudaErrorUnsupportedPtxVersion = 222,
  cudaErrorJitCompilationDisabled = 223,
  cudaErrorInvalidSource = 300,
  cudaErrorFileNotFound = 301,
  cudaErrorSharedObjectSymbolNotFound = 302,
  cudaErrorSharedObjectInitFailed = 303,
  cudaErrorOperatingSystem = 304,
  cudaErrorInvalidResourceHandle = 400,
  cudaErrorIllegalState = 401,
  cudaErrorSymbolNotFound = 500,
  cudaErrorNotReady = 600,
  cudaErrorIllegalAddress = 700,
  cudaErrorLaunchOutOfResources = 701,
  cudaErrorLaunchTimeout = 702,
  cudaErrorLaunchIncompatibleTexturing = 703,
  cudaErrorPeerAccessAlreadyEnabled = 704,
  cudaErrorPeerAccessNotEnabled = 705,
  cudaErrorSetOnActiveProcess = 708,
  cudaErrorContextIsDestroyed = 709,
  cudaErrorAssert = 710,
  cudaErrorTooManyPeers = 711,
  cudaErrorHostMemoryAlreadyRegistered = 712,
  cudaErrorHostMemoryNotRegistered = 713,
  cudaErrorHardwareStackError = 714,
  cudaErrorIllegalInstruction = 715,
  cudaErrorMisalignedAddress = 716,
  cudaErrorInvalidAddressSpace = 717,
  cudaErrorInvalidPc = 718,
  cudaErrorLaunchFailure = 719,
  cudaErrorCooperativeLaunchTooLarge = 720,
  cudaErrorNotPermitted = 800,
  cudaErrorNotSupported = 801,
  cudaErrorSystemNotReady = 802,
  cudaErrorSystemDriverMismatch = 803,
  cudaErrorCompatNotSupportedOnDevice = 804,
  cudaErrorStreamCaptureUnsupported = 900,
  cudaErrorStreamCaptureInvalidated = 901,
  cudaErrorStreamCaptureMerge = 902,
  cudaErrorStreamCaptureUnmatched = 903,
  cudaErrorStreamCaptureUnjoined = 904,
  cudaErrorStreamCaptureIsolation = 905,
  cudaErrorStreamCaptureImplicit = 906,
  cudaErrorCapturedEvent = 907,
  cudaErrorStreamCaptureWrongThread = 908,
  cudaErrorTimeout = 909,
  cudaErrorGraphExecUpdateFailure = 910,
  cudaErrorUnknown = 999,
  cudaErrorApiFailureBase = 10000
}; // id 0xbf5670 

enum cudaChannelFormatKind
{
  cudaChannelFormatKindSigned = 0,
  cudaChannelFormatKindUnsigned = 1,
  cudaChannelFormatKindFloat = 2,
  cudaChannelFormatKindNone = 3,
  cudaChannelFormatKindNV12 = 4
}; // id 0xc00228 

typedef struct cudaArray * cudaArray_t; // id 0xc00d10 

typedef const struct cudaArray * cudaArray_const_t; // id 0xc00e60 

typedef struct cudaMipmappedArray * cudaMipmappedArray_t; // id 0xc010d0 

typedef const struct cudaMipmappedArray * cudaMipmappedArray_const_t; // id 0xc01220 

enum cudaMemoryType
{
  cudaMemoryTypeUnregistered = 0,
  cudaMemoryTypeHost = 1,
  cudaMemoryTypeDevice = 2,
  cudaMemoryTypeManaged = 3
}; // id 0xc05af0 

enum cudaMemcpyKind
{
  cudaMemcpyHostToHost = 0,
  cudaMemcpyHostToDevice = 1,
  cudaMemcpyDeviceToHost = 2,
  cudaMemcpyDeviceToDevice = 3,
  cudaMemcpyDefault = 4
}; // id 0xc05ea8 

enum cudaAccessProperty
{
  cudaAccessPropertyNormal = 0,
  cudaAccessPropertyStreaming = 1,
  cudaAccessPropertyPersisting = 2
}; // id 0xc09c78 

typedef void (*cudaHostFn_t)(void *); // id 0xc0a500 

enum cudaStreamCaptureStatus
{
  cudaStreamCaptureStatusNone = 0,
  cudaStreamCaptureStatusActive = 1,
  cudaStreamCaptureStatusInvalidated = 2
}; // id 0xc0a798 

enum cudaStreamCaptureMode
{
  cudaStreamCaptureModeGlobal = 0,
  cudaStreamCaptureModeThreadLocal = 1,
  cudaStreamCaptureModeRelaxed = 2
}; // id 0xc0b180 

enum cudaSynchronizationPolicy
{
  cudaSyncPolicyAuto = 1,
  cudaSyncPolicySpin = 2,
  cudaSyncPolicyYield = 3,
  cudaSyncPolicyBlockingSync = 4
}; // id 0xc0b3d8 

enum cudaStreamAttrID
{
  cudaStreamAttributeAccessPolicyWindow = 1,
  cudaStreamAttributeSynchronizationPolicy = 3
}; // id 0xc0b6e8 

enum cudaStreamUpdateCaptureDependenciesFlags
{
  cudaStreamAddCaptureDependencies = 0,
  cudaStreamSetCaptureDependencies = 1
}; // id 0xc0bbc8 

enum cudaUserObjectFlags
{
  cudaUserObjectNoDestructorSync = 1
}; // id 0xc0be28 

enum cudaUserObjectRetainFlags
{
  cudaGraphUserObjectMove = 1
}; // id 0xc0bfc8 

enum cudaGraphicsRegisterFlags
{
  cudaGraphicsRegisterFlagsNone = 0,
  cudaGraphicsRegisterFlagsReadOnly = 1,
  cudaGraphicsRegisterFlagsWriteDiscard = 2,
  cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
  cudaGraphicsRegisterFlagsTextureGather = 8
}; // id 0xc0c558 

enum cudaGraphicsMapFlags
{
  cudaGraphicsMapFlagsNone = 0,
  cudaGraphicsMapFlagsReadOnly = 1,
  cudaGraphicsMapFlagsWriteDiscard = 2
}; // id 0xc0c9c8 

enum cudaGraphicsCubeFace
{
  cudaGraphicsCubeFacePositiveX = 0,
  cudaGraphicsCubeFaceNegativeX = 1,
  cudaGraphicsCubeFacePositiveY = 2,
  cudaGraphicsCubeFaceNegativeY = 3,
  cudaGraphicsCubeFacePositiveZ = 4,
  cudaGraphicsCubeFaceNegativeZ = 5
}; // id 0xc0ccd8 

enum cudaKernelNodeAttrID
{
  cudaKernelNodeAttributeAccessPolicyWindow = 1,
  cudaKernelNodeAttributeCooperative = 2
}; // id 0xc0d1f8 

enum cudaResourceType
{
  cudaResourceTypeArray = 0,
  cudaResourceTypeMipmappedArray = 1,
  cudaResourceTypeLinear = 2,
  cudaResourceTypePitch2D = 3
}; // id 0xc0ebb8 

enum cudaResourceViewFormat
{
  cudaResViewFormatNone = 0,
  cudaResViewFormatUnsignedChar1 = 1,
  cudaResViewFormatUnsignedChar2 = 2,
  cudaResViewFormatUnsignedChar4 = 3,
  cudaResViewFormatSignedChar1 = 4,
  cudaResViewFormatSignedChar2 = 5,
  cudaResViewFormatSignedChar4 = 6,
  cudaResViewFormatUnsignedShort1 = 7,
  cudaResViewFormatUnsignedShort2 = 8,
  cudaResViewFormatUnsignedShort4 = 9,
  cudaResViewFormatSignedShort1 = 10,
  cudaResViewFormatSignedShort2 = 11,
  cudaResViewFormatSignedShort4 = 12,
  cudaResViewFormatUnsignedInt1 = 13,
  cudaResViewFormatUnsignedInt2 = 14,
  cudaResViewFormatUnsignedInt4 = 15,
  cudaResViewFormatSignedInt1 = 16,
  cudaResViewFormatSignedInt2 = 17,
  cudaResViewFormatSignedInt4 = 18,
  cudaResViewFormatHalf1 = 19,
  cudaResViewFormatHalf2 = 20,
  cudaResViewFormatHalf4 = 21,
  cudaResViewFormatFloat1 = 22,
  cudaResViewFormatFloat2 = 23,
  cudaResViewFormatFloat4 = 24,
  cudaResViewFormatUnsignedBlockCompressed1 = 25,
  cudaResViewFormatUnsignedBlockCompressed2 = 26,
  cudaResViewFormatUnsignedBlockCompressed3 = 27,
  cudaResViewFormatUnsignedBlockCompressed4 = 28,
  cudaResViewFormatSignedBlockCompressed4 = 29,
  cudaResViewFormatUnsignedBlockCompressed5 = 30,
  cudaResViewFormatSignedBlockCompressed5 = 31,
  cudaResViewFormatUnsignedBlockCompressed6H = 32,
  cudaResViewFormatSignedBlockCompressed6H = 33,
  cudaResViewFormatUnsignedBlockCompressed7 = 34
}; // id 0xc0ef78 

enum cudaFuncAttribute
{
  cudaFuncAttributeMaxDynamicSharedMemorySize = 8,
  cudaFuncAttributePreferredSharedMemoryCarveout = 9,
  cudaFuncAttributeMax
}; // id 0xc14658 

enum cudaFuncCache
{
  cudaFuncCachePreferNone = 0,
  cudaFuncCachePreferShared = 1,
  cudaFuncCachePreferL1 = 2,
  cudaFuncCachePreferEqual = 3
}; // id 0xc14ff0 

enum cudaSharedMemConfig
{
  cudaSharedMemBankSizeDefault = 0,
  cudaSharedMemBankSizeFourByte = 1,
  cudaSharedMemBankSizeEightByte = 2
}; // id 0xc153a8 

enum cudaSharedCarveout
{
  cudaSharedmemCarveoutDefault = -1,
  cudaSharedmemCarveoutMaxShared = 100,
  cudaSharedmemCarveoutMaxL1 = 0
}; // id 0xc15638 

enum cudaComputeMode
{
  cudaComputeModeDefault = 0,
  cudaComputeModeExclusive = 1,
  cudaComputeModeProhibited = 2,
  cudaComputeModeExclusiveProcess = 3
}; // id 0xc15958 

enum cudaLimit
{
  cudaLimitStackSize = 0,
  cudaLimitPrintfFifoSize = 1,
  cudaLimitMallocHeapSize = 2,
  cudaLimitDevRuntimeSyncDepth = 3,
  cudaLimitDevRuntimePendingLaunchCount = 4,
  cudaLimitMaxL2FetchGranularity = 5,
  cudaLimitPersistingL2CacheSize = 6
}; // id 0xc15d18 

enum cudaMemoryAdvise
{
  cudaMemAdviseSetReadMostly = 1,
  cudaMemAdviseUnsetReadMostly = 2,
  cudaMemAdviseSetPreferredLocation = 3,
  cudaMemAdviseUnsetPreferredLocation = 4,
  cudaMemAdviseSetAccessedBy = 5,
  cudaMemAdviseUnsetAccessedBy = 6
}; // id 0xc183b8 

enum cudaMemRangeAttribute
{
  cudaMemRangeAttributeReadMostly = 1,
  cudaMemRangeAttributePreferredLocation = 2,
  cudaMemRangeAttributeAccessedBy = 3,
  cudaMemRangeAttributeLastPrefetchLocation = 4
}; // id 0xc188d8 

enum cudaOutputMode
{
  cudaKeyValuePair = 0,
  cudaCSV = 1
}; // id 0xc18c98 

enum cudaFlushGPUDirectRDMAWritesOptions
{
  cudaFlushGPUDirectRDMAWritesOptionHost = 1 << 0,
  cudaFlushGPUDirectRDMAWritesOptionMemOps = 1 << 1
}; // id 0xc18ef8 

enum cudaGPUDirectRDMAWritesOrdering
{
  cudaGPUDirectRDMAWritesOrderingNone = 0,
  cudaGPUDirectRDMAWritesOrderingOwner = 100,
  cudaGPUDirectRDMAWritesOrderingAllDevices = 200
}; // id 0xc1b208 

enum cudaFlushGPUDirectRDMAWritesScope
{
  cudaFlushGPUDirectRDMAWritesToOwner = 100,
  cudaFlushGPUDirectRDMAWritesToAllDevices = 200
}; // id 0xc1b518 

enum cudaFlushGPUDirectRDMAWritesTarget
{
  cudaFlushGPUDirectRDMAWritesTargetCurrentDevice
}; // id 0xc1b778 

enum cudaDeviceAttr
{
  cudaDevAttrMaxThreadsPerBlock = 1,
  cudaDevAttrMaxBlockDimX = 2,
  cudaDevAttrMaxBlockDimY = 3,
  cudaDevAttrMaxBlockDimZ = 4,
  cudaDevAttrMaxGridDimX = 5,
  cudaDevAttrMaxGridDimY = 6,
  cudaDevAttrMaxGridDimZ = 7,
  cudaDevAttrMaxSharedMemoryPerBlock = 8,
  cudaDevAttrTotalConstantMemory = 9,
  cudaDevAttrWarpSize = 10,
  cudaDevAttrMaxPitch = 11,
  cudaDevAttrMaxRegistersPerBlock = 12,
  cudaDevAttrClockRate = 13,
  cudaDevAttrTextureAlignment = 14,
  cudaDevAttrGpuOverlap = 15,
  cudaDevAttrMultiProcessorCount = 16,
  cudaDevAttrKernelExecTimeout = 17,
  cudaDevAttrIntegrated = 18,
  cudaDevAttrCanMapHostMemory = 19,
  cudaDevAttrComputeMode = 20,
  cudaDevAttrMaxTexture1DWidth = 21,
  cudaDevAttrMaxTexture2DWidth = 22,
  cudaDevAttrMaxTexture2DHeight = 23,
  cudaDevAttrMaxTexture3DWidth = 24,
  cudaDevAttrMaxTexture3DHeight = 25,
  cudaDevAttrMaxTexture3DDepth = 26,
  cudaDevAttrMaxTexture2DLayeredWidth = 27,
  cudaDevAttrMaxTexture2DLayeredHeight = 28,
  cudaDevAttrMaxTexture2DLayeredLayers = 29,
  cudaDevAttrSurfaceAlignment = 30,
  cudaDevAttrConcurrentKernels = 31,
  cudaDevAttrEccEnabled = 32,
  cudaDevAttrPciBusId = 33,
  cudaDevAttrPciDeviceId = 34,
  cudaDevAttrTccDriver = 35,
  cudaDevAttrMemoryClockRate = 36,
  cudaDevAttrGlobalMemoryBusWidth = 37,
  cudaDevAttrL2CacheSize = 38,
  cudaDevAttrMaxThreadsPerMultiProcessor = 39,
  cudaDevAttrAsyncEngineCount = 40,
  cudaDevAttrUnifiedAddressing = 41,
  cudaDevAttrMaxTexture1DLayeredWidth = 42,
  cudaDevAttrMaxTexture1DLayeredLayers = 43,
  cudaDevAttrMaxTexture2DGatherWidth = 45,
  cudaDevAttrMaxTexture2DGatherHeight = 46,
  cudaDevAttrMaxTexture3DWidthAlt = 47,
  cudaDevAttrMaxTexture3DHeightAlt = 48,
  cudaDevAttrMaxTexture3DDepthAlt = 49,
  cudaDevAttrPciDomainId = 50,
  cudaDevAttrTexturePitchAlignment = 51,
  cudaDevAttrMaxTextureCubemapWidth = 52,
  cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
  cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
  cudaDevAttrMaxSurface1DWidth = 55,
  cudaDevAttrMaxSurface2DWidth = 56,
  cudaDevAttrMaxSurface2DHeight = 57,
  cudaDevAttrMaxSurface3DWidth = 58,
  cudaDevAttrMaxSurface3DHeight = 59,
  cudaDevAttrMaxSurface3DDepth = 60,
  cudaDevAttrMaxSurface1DLayeredWidth = 61,
  cudaDevAttrMaxSurface1DLayeredLayers = 62,
  cudaDevAttrMaxSurface2DLayeredWidth = 63,
  cudaDevAttrMaxSurface2DLayeredHeight = 64,
  cudaDevAttrMaxSurface2DLayeredLayers = 65,
  cudaDevAttrMaxSurfaceCubemapWidth = 66,
  cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
  cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
  cudaDevAttrMaxTexture1DLinearWidth = 69,
  cudaDevAttrMaxTexture2DLinearWidth = 70,
  cudaDevAttrMaxTexture2DLinearHeight = 71,
  cudaDevAttrMaxTexture2DLinearPitch = 72,
  cudaDevAttrMaxTexture2DMipmappedWidth = 73,
  cudaDevAttrMaxTexture2DMipmappedHeight = 74,
  cudaDevAttrComputeCapabilityMajor = 75,
  cudaDevAttrComputeCapabilityMinor = 76,
  cudaDevAttrMaxTexture1DMipmappedWidth = 77,
  cudaDevAttrStreamPrioritiesSupported = 78,
  cudaDevAttrGlobalL1CacheSupported = 79,
  cudaDevAttrLocalL1CacheSupported = 80,
  cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
  cudaDevAttrMaxRegistersPerMultiprocessor = 82,
  cudaDevAttrManagedMemory = 83,
  cudaDevAttrIsMultiGpuBoard = 84,
  cudaDevAttrMultiGpuBoardGroupID = 85,
  cudaDevAttrHostNativeAtomicSupported = 86,
  cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
  cudaDevAttrPageableMemoryAccess = 88,
  cudaDevAttrConcurrentManagedAccess = 89,
  cudaDevAttrComputePreemptionSupported = 90,
  cudaDevAttrCanUseHostPointerForRegisteredMem = 91,
  cudaDevAttrReserved92 = 92,
  cudaDevAttrReserved93 = 93,
  cudaDevAttrReserved94 = 94,
  cudaDevAttrCooperativeLaunch = 95,
  cudaDevAttrCooperativeMultiDeviceLaunch = 96,
  cudaDevAttrMaxSharedMemoryPerBlockOptin = 97,
  cudaDevAttrCanFlushRemoteWrites = 98,
  cudaDevAttrHostRegisterSupported = 99,
  cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100,
  cudaDevAttrDirectManagedMemAccessFromHost = 101,
  cudaDevAttrMaxBlocksPerMultiprocessor = 106,
  cudaDevAttrMaxPersistingL2CacheSize = 108,
  cudaDevAttrMaxAccessPolicyWindowSize = 109,
  cudaDevAttrReservedSharedMemoryPerBlock = 111,
  cudaDevAttrSparseCudaArraySupported = 112,
  cudaDevAttrHostRegisterReadOnlySupported = 113,
  cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114,
  cudaDevAttrMemoryPoolsSupported = 115,
  cudaDevAttrGPUDirectRDMASupported = 116,
  cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117,
  cudaDevAttrGPUDirectRDMAWritesOrdering = 118,
  cudaDevAttrMemoryPoolSupportedHandleTypes = 119
}; // id 0xc1b8e8 

enum cudaMemPoolAttr
{
  cudaMemPoolReuseFollowEventDependencies = 1,
  cudaMemPoolReuseAllowOpportunistic = 2,
  cudaMemPoolReuseAllowInternalDependencies = 3,
  cudaMemPoolAttrReleaseThreshold = 4,
  cudaMemPoolAttrReservedMemCurrent = 5,
  cudaMemPoolAttrReservedMemHigh = 6,
  cudaMemPoolAttrUsedMemCurrent = 7,
  cudaMemPoolAttrUsedMemHigh = 8
}; // id 0xc20468 

enum cudaMemLocationType
{
  cudaMemLocationTypeInvalid = 0,
  cudaMemLocationTypeDevice = 1
}; // id 0xc20ad8 

enum cudaMemAccessFlags
{
  cudaMemAccessFlagsProtNone = 0,
  cudaMemAccessFlagsProtRead = 1,
  cudaMemAccessFlagsProtReadWrite = 3
}; // id 0xc211a8 

enum cudaMemAllocationType
{
  cudaMemAllocationTypeInvalid = 0,
  cudaMemAllocationTypePinned = 1,
  cudaMemAllocationTypeMax = 2147483647
}; // id 0xc21778 

enum cudaMemAllocationHandleType
{
  cudaMemHandleTypeNone = 0,
  cudaMemHandleTypePosixFileDescriptor = 1,
  cudaMemHandleTypeWin32 = 2,
  cudaMemHandleTypeWin32Kmt = 4
}; // id 0xc21a38 

enum cudaDeviceP2PAttr
{
  cudaDevP2PAttrPerformanceRank = 1,
  cudaDevP2PAttrAccessSupported = 2,
  cudaDevP2PAttrNativeAtomicSupported = 3,
  cudaDevP2PAttrCudaArrayAccessSupported = 4
}; // id 0xc265b8 

typedef struct CUuuid_st cudaUUID_t; // id 0xc26bf8 

typedef struct cudaIpcEventHandle_st cudaIpcEventHandle_t; // id 0xc2f688 

typedef struct cudaIpcMemHandle_st cudaIpcMemHandle_t; // id 0xc2f8c8 

enum cudaExternalMemoryHandleType
{
  cudaExternalMemoryHandleTypeOpaqueFd = 1,
  cudaExternalMemoryHandleTypeOpaqueWin32 = 2,
  cudaExternalMemoryHandleTypeOpaqueWin32Kmt = 3,
  cudaExternalMemoryHandleTypeD3D12Heap = 4,
  cudaExternalMemoryHandleTypeD3D12Resource = 5,
  cudaExternalMemoryHandleTypeD3D11Resource = 6,
  cudaExternalMemoryHandleTypeD3D11ResourceKmt = 7,
  cudaExternalMemoryHandleTypeNvSciBuf = 8
}; // id 0xc2f960 

enum cudaExternalSemaphoreHandleType
{
  cudaExternalSemaphoreHandleTypeOpaqueFd = 1,
  cudaExternalSemaphoreHandleTypeOpaqueWin32 = 2,
  cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt = 3,
  cudaExternalSemaphoreHandleTypeD3D12Fence = 4,
  cudaExternalSemaphoreHandleTypeD3D11Fence = 5,
  cudaExternalSemaphoreHandleTypeNvSciSync = 6,
  cudaExternalSemaphoreHandleTypeKeyedMutex = 7,
  cudaExternalSemaphoreHandleTypeKeyedMutexKmt = 8,
  cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd = 9,
  cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32 = 10
}; // id 0xc316b8 

typedef enum cudaError cudaError_t; // id 0xc365c0 

typedef struct CUstream_st * cudaStream_t; // id 0xc367b0 

typedef struct CUevent_st * cudaEvent_t; // id 0xc369b0 

typedef struct cudaGraphicsResource * cudaGraphicsResource_t; // id 0xc36b00 

typedef enum cudaOutputMode cudaOutputMode_t; // id 0xc36be0 

typedef struct CUexternalMemory_st * cudaExternalMemory_t; // id 0xc36dd0 

typedef struct CUexternalSemaphore_st * cudaExternalSemaphore_t; // id 0xc36fd0 

typedef struct CUgraph_st * cudaGraph_t; // id 0xc37210 

typedef struct CUgraphNode_st * cudaGraphNode_t; // id 0xc37410 

typedef struct CUuserObject_st * cudaUserObject_t; // id 0xc37610 

typedef struct CUfunc_st * cudaFunction_t; // id 0xc37810 

typedef struct CUmemPoolHandle_st * cudaMemPool_t; // id 0xc37a10 

enum cudaCGScope
{
  cudaCGScopeInvalid = 0,
  cudaCGScopeGrid = 1,
  cudaCGScopeMultiGrid = 2
}; // id 0xc37ab0 

enum cudaGraphNodeType
{
  cudaGraphNodeTypeKernel = 0,
  cudaGraphNodeTypeMemcpy = 1,
  cudaGraphNodeTypeMemset = 2,
  cudaGraphNodeTypeHost = 3,
  cudaGraphNodeTypeGraph = 4,
  cudaGraphNodeTypeEmpty = 5,
  cudaGraphNodeTypeWaitEvent = 6,
  cudaGraphNodeTypeEventRecord = 7,
  cudaGraphNodeTypeCount
}; // id 0xc38f78 

typedef struct CUgraphExec_st * cudaGraphExec_t; // id 0xc39d70 

enum cudaGraphExecUpdateResult
{
  cudaGraphExecUpdateSuccess = 0,
  cudaGraphExecUpdateError = 1,
  cudaGraphExecUpdateErrorTopologyChanged = 2,
  cudaGraphExecUpdateErrorNodeTypeChanged = 3,
  cudaGraphExecUpdateErrorFunctionChanged = 4,
  cudaGraphExecUpdateErrorParametersChanged = 5,
  cudaGraphExecUpdateErrorNotSupported = 6,
  cudaGraphExecUpdateErrorUnsupportedFunctionChange = 7
}; // id 0xc39e10 

enum cudaGetDriverEntryPointFlags
{
  cudaEnableDefault = 0,
  cudaEnableLegacyStream = 1,
  cudaEnablePerThreadDefaultStream = 2
}; // id 0xc3a488 

enum cudaGraphDebugDotFlags
{
  cudaGraphDebugDotFlagsVerbose = 1 << 0,
  cudaGraphDebugDotFlagsKernelNodeParams = 1 << 2,
  cudaGraphDebugDotFlagsMemcpyNodeParams = 1 << 3,
  cudaGraphDebugDotFlagsMemsetNodeParams = 1 << 4,
  cudaGraphDebugDotFlagsHostNodeParams = 1 << 5,
  cudaGraphDebugDotFlagsEventNodeParams = 1 << 6,
  cudaGraphDebugDotFlagsExtSemasSignalNodeParams = 1 << 7,
  cudaGraphDebugDotFlagsExtSemasWaitNodeParams = 1 << 8,
  cudaGraphDebugDotFlagsKernelNodeAttributes = 1 << 9,
  cudaGraphDebugDotFlagsHandles = 1 << 10
}; // id 0xc3a798 

enum cudaSurfaceBoundaryMode
{
  cudaBoundaryModeZero = 0,
  cudaBoundaryModeClamp = 1,
  cudaBoundaryModeTrap = 2
}; // id 0xc3c7b8 

enum cudaSurfaceFormatMode
{
  cudaFormatModeForced = 0,
  cudaFormatModeAuto = 1
}; // id 0xc3cac8 

typedef unsigned long long cudaSurfaceObject_t; // id 0xc3f7f0 

enum cudaTextureAddressMode
{
  cudaAddressModeWrap = 0,
  cudaAddressModeClamp = 1,
  cudaAddressModeMirror = 2,
  cudaAddressModeBorder = 3
}; // id 0xc3f938 

enum cudaTextureFilterMode
{
  cudaFilterModePoint = 0,
  cudaFilterModeLinear = 1
}; // id 0xc3fcf8 

enum cudaTextureReadMode
{
  cudaReadModeElementType = 0,
  cudaReadModeNormalizedFloat = 1
}; // id 0xc3ff58 

typedef unsigned long long cudaTextureObject_t; // id 0xc44910 

enum cudaDataType_t
{
  CUDA_R_16F = 2,
  CUDA_C_16F = 6,
  CUDA_R_16BF = 14,
  CUDA_C_16BF = 15,
  CUDA_R_32F = 0,
  CUDA_C_32F = 4,
  CUDA_R_64F = 1,
  CUDA_C_64F = 5,
  CUDA_R_4I = 16,
  CUDA_C_4I = 17,
  CUDA_R_4U = 18,
  CUDA_C_4U = 19,
  CUDA_R_8I = 3,
  CUDA_C_8I = 7,
  CUDA_R_8U = 8,
  CUDA_C_8U = 9,
  CUDA_R_16I = 20,
  CUDA_C_16I = 21,
  CUDA_R_16U = 22,
  CUDA_C_16U = 23,
  CUDA_R_32I = 10,
  CUDA_C_32I = 11,
  CUDA_R_32U = 12,
  CUDA_C_32U = 13,
  CUDA_R_64I = 24,
  CUDA_C_64I = 25,
  CUDA_R_64U = 26,
  CUDA_C_64U = 27
}; // id 0xc44998 

typedef enum cudaDataType_t cudaDataType; // id 0xc480e8 

enum libraryPropertyType_t
{
  MAJOR_VERSION,
  MINOR_VERSION,
  PATCH_LEVEL
}; // id 0xc48158 

typedef enum cudaDataType_t cudaDataType_t; // id 0xc48450 

typedef cudaError_t  CUDAAPI tcudaDeviceReset(void);
extern tcudaDeviceReset *cudaDeviceReset;
typedef cudaError_t  CUDAAPI tcudaDeviceSynchronize(void);
extern tcudaDeviceSynchronize *cudaDeviceSynchronize;
typedef cudaError_t  CUDAAPI tcudaDeviceSetLimit(enum cudaLimit, size_t);
extern tcudaDeviceSetLimit *cudaDeviceSetLimit;
typedef cudaError_t  CUDAAPI tcudaDeviceGetLimit(size_t *, enum cudaLimit);
extern tcudaDeviceGetLimit *cudaDeviceGetLimit;
typedef cudaError_t  CUDAAPI tcudaDeviceGetTexture1DLinearMaxWidth(size_t *, const struct cudaChannelFormatDesc *, int);
extern tcudaDeviceGetTexture1DLinearMaxWidth *cudaDeviceGetTexture1DLinearMaxWidth;
typedef cudaError_t  CUDAAPI tcudaDeviceGetCacheConfig(enum cudaFuncCache *);
extern tcudaDeviceGetCacheConfig *cudaDeviceGetCacheConfig;
typedef cudaError_t  CUDAAPI tcudaDeviceGetStreamPriorityRange(int *, int *);
extern tcudaDeviceGetStreamPriorityRange *cudaDeviceGetStreamPriorityRange;
typedef cudaError_t  CUDAAPI tcudaDeviceSetCacheConfig(enum cudaFuncCache);
extern tcudaDeviceSetCacheConfig *cudaDeviceSetCacheConfig;
typedef cudaError_t  CUDAAPI tcudaDeviceGetSharedMemConfig(enum cudaSharedMemConfig *);
extern tcudaDeviceGetSharedMemConfig *cudaDeviceGetSharedMemConfig;
typedef cudaError_t  CUDAAPI tcudaDeviceSetSharedMemConfig(enum cudaSharedMemConfig);
extern tcudaDeviceSetSharedMemConfig *cudaDeviceSetSharedMemConfig;
typedef cudaError_t  CUDAAPI tcudaDeviceGetByPCIBusId(int *, const char *);
extern tcudaDeviceGetByPCIBusId *cudaDeviceGetByPCIBusId;
typedef cudaError_t  CUDAAPI tcudaDeviceGetPCIBusId(char *, int, int);
extern tcudaDeviceGetPCIBusId *cudaDeviceGetPCIBusId;
typedef cudaError_t  CUDAAPI tcudaIpcGetEventHandle(cudaIpcEventHandle_t *, cudaEvent_t);
extern tcudaIpcGetEventHandle *cudaIpcGetEventHandle;
typedef cudaError_t  CUDAAPI tcudaIpcOpenEventHandle(cudaEvent_t *, cudaIpcEventHandle_t);
extern tcudaIpcOpenEventHandle *cudaIpcOpenEventHandle;
typedef cudaError_t  CUDAAPI tcudaIpcGetMemHandle(cudaIpcMemHandle_t *, void *);
extern tcudaIpcGetMemHandle *cudaIpcGetMemHandle;
typedef cudaError_t  CUDAAPI tcudaIpcOpenMemHandle(void **, cudaIpcMemHandle_t, unsigned int);
extern tcudaIpcOpenMemHandle *cudaIpcOpenMemHandle;
typedef cudaError_t  CUDAAPI tcudaIpcCloseMemHandle(void *);
extern tcudaIpcCloseMemHandle *cudaIpcCloseMemHandle;
typedef cudaError_t  CUDAAPI tcudaDeviceFlushGPUDirectRDMAWrites(enum cudaFlushGPUDirectRDMAWritesTarget, enum cudaFlushGPUDirectRDMAWritesScope);
extern tcudaDeviceFlushGPUDirectRDMAWrites *cudaDeviceFlushGPUDirectRDMAWrites;
typedef cudaError_t  CUDAAPI tcudaThreadExit(void);
extern tcudaThreadExit *cudaThreadExit;
typedef cudaError_t  CUDAAPI tcudaThreadSynchronize(void);
extern tcudaThreadSynchronize *cudaThreadSynchronize;
typedef cudaError_t  CUDAAPI tcudaThreadSetLimit(enum cudaLimit, size_t);
extern tcudaThreadSetLimit *cudaThreadSetLimit;
typedef cudaError_t  CUDAAPI tcudaThreadGetLimit(size_t *, enum cudaLimit);
extern tcudaThreadGetLimit *cudaThreadGetLimit;
typedef cudaError_t  CUDAAPI tcudaThreadGetCacheConfig(enum cudaFuncCache *);
extern tcudaThreadGetCacheConfig *cudaThreadGetCacheConfig;
typedef cudaError_t  CUDAAPI tcudaThreadSetCacheConfig(enum cudaFuncCache);
extern tcudaThreadSetCacheConfig *cudaThreadSetCacheConfig;
typedef cudaError_t  CUDAAPI tcudaGetLastError(void);
extern tcudaGetLastError *cudaGetLastError;
typedef cudaError_t  CUDAAPI tcudaPeekAtLastError(void);
extern tcudaPeekAtLastError *cudaPeekAtLastError;
typedef const char * CUDAAPI tcudaGetErrorName(cudaError_t);
extern tcudaGetErrorName *cudaGetErrorName;
typedef const char * CUDAAPI tcudaGetErrorString(cudaError_t);
extern tcudaGetErrorString *cudaGetErrorString;
typedef cudaError_t  CUDAAPI tcudaGetDeviceCount(int *);
extern tcudaGetDeviceCount *cudaGetDeviceCount;
typedef cudaError_t  CUDAAPI tcudaGetDeviceProperties(struct cudaDeviceProp *, int);
extern tcudaGetDeviceProperties *cudaGetDeviceProperties;
typedef cudaError_t  CUDAAPI tcudaDeviceGetAttribute(int *, enum cudaDeviceAttr, int);
extern tcudaDeviceGetAttribute *cudaDeviceGetAttribute;
typedef cudaError_t  CUDAAPI tcudaDeviceGetDefaultMemPool(cudaMemPool_t *, int);
extern tcudaDeviceGetDefaultMemPool *cudaDeviceGetDefaultMemPool;
typedef cudaError_t  CUDAAPI tcudaDeviceSetMemPool(int, cudaMemPool_t);
extern tcudaDeviceSetMemPool *cudaDeviceSetMemPool;
typedef cudaError_t  CUDAAPI tcudaDeviceGetMemPool(cudaMemPool_t *, int);
extern tcudaDeviceGetMemPool *cudaDeviceGetMemPool;
typedef cudaError_t  CUDAAPI tcudaDeviceGetNvSciSyncAttributes(void *, int, int);
extern tcudaDeviceGetNvSciSyncAttributes *cudaDeviceGetNvSciSyncAttributes;
typedef cudaError_t  CUDAAPI tcudaDeviceGetP2PAttribute(int *, enum cudaDeviceP2PAttr, int, int);
extern tcudaDeviceGetP2PAttribute *cudaDeviceGetP2PAttribute;
typedef cudaError_t  CUDAAPI tcudaChooseDevice(int *, const struct cudaDeviceProp *);
extern tcudaChooseDevice *cudaChooseDevice;
typedef cudaError_t  CUDAAPI tcudaSetDevice(int);
extern tcudaSetDevice *cudaSetDevice;
typedef cudaError_t  CUDAAPI tcudaGetDevice(int *);
extern tcudaGetDevice *cudaGetDevice;
typedef cudaError_t  CUDAAPI tcudaSetValidDevices(int *, int);
extern tcudaSetValidDevices *cudaSetValidDevices;
typedef cudaError_t  CUDAAPI tcudaSetDeviceFlags(unsigned int);
extern tcudaSetDeviceFlags *cudaSetDeviceFlags;
typedef cudaError_t  CUDAAPI tcudaGetDeviceFlags(unsigned int *);
extern tcudaGetDeviceFlags *cudaGetDeviceFlags;
typedef cudaError_t  CUDAAPI tcudaStreamCreate(cudaStream_t *);
extern tcudaStreamCreate *cudaStreamCreate;
typedef cudaError_t  CUDAAPI tcudaStreamCreateWithFlags(cudaStream_t *, unsigned int);
extern tcudaStreamCreateWithFlags *cudaStreamCreateWithFlags;
typedef cudaError_t  CUDAAPI tcudaStreamCreateWithPriority(cudaStream_t *, unsigned int, int);
extern tcudaStreamCreateWithPriority *cudaStreamCreateWithPriority;
typedef cudaError_t  CUDAAPI tcudaStreamGetPriority(cudaStream_t, int *);
extern tcudaStreamGetPriority *cudaStreamGetPriority;
typedef cudaError_t  CUDAAPI tcudaStreamGetFlags(cudaStream_t, unsigned int *);
extern tcudaStreamGetFlags *cudaStreamGetFlags;
typedef cudaError_t  CUDAAPI tcudaCtxResetPersistingL2Cache(void);
extern tcudaCtxResetPersistingL2Cache *cudaCtxResetPersistingL2Cache;
typedef cudaError_t  CUDAAPI tcudaStreamCopyAttributes(cudaStream_t, cudaStream_t);
extern tcudaStreamCopyAttributes *cudaStreamCopyAttributes;
typedef cudaError_t  CUDAAPI tcudaStreamGetAttribute(cudaStream_t, enum cudaStreamAttrID, union cudaStreamAttrValue *);
extern tcudaStreamGetAttribute *cudaStreamGetAttribute;
typedef cudaError_t  CUDAAPI tcudaStreamSetAttribute(cudaStream_t, enum cudaStreamAttrID, const union cudaStreamAttrValue *);
extern tcudaStreamSetAttribute *cudaStreamSetAttribute;
typedef cudaError_t  CUDAAPI tcudaStreamDestroy(cudaStream_t);
extern tcudaStreamDestroy *cudaStreamDestroy;
typedef cudaError_t  CUDAAPI tcudaStreamWaitEvent(cudaStream_t, cudaEvent_t, unsigned int);
extern tcudaStreamWaitEvent *cudaStreamWaitEvent;
typedef void (*cudaStreamCallback_t)(cudaStream_t, cudaError_t, void *); // id 0xc19df0 

typedef cudaError_t  CUDAAPI tcudaStreamAddCallback(cudaStream_t, cudaStreamCallback_t, void *, unsigned int);
extern tcudaStreamAddCallback *cudaStreamAddCallback;
typedef cudaError_t  CUDAAPI tcudaStreamSynchronize(cudaStream_t);
extern tcudaStreamSynchronize *cudaStreamSynchronize;
typedef cudaError_t  CUDAAPI tcudaStreamQuery(cudaStream_t);
extern tcudaStreamQuery *cudaStreamQuery;
typedef cudaError_t  CUDAAPI tcudaStreamAttachMemAsync(cudaStream_t, void *, size_t, unsigned int);
extern tcudaStreamAttachMemAsync *cudaStreamAttachMemAsync;
typedef cudaError_t  CUDAAPI tcudaStreamBeginCapture(cudaStream_t, enum cudaStreamCaptureMode);
extern tcudaStreamBeginCapture *cudaStreamBeginCapture;
typedef cudaError_t  CUDAAPI tcudaThreadExchangeStreamCaptureMode(enum cudaStreamCaptureMode *);
extern tcudaThreadExchangeStreamCaptureMode *cudaThreadExchangeStreamCaptureMode;
typedef cudaError_t  CUDAAPI tcudaStreamEndCapture(cudaStream_t, cudaGraph_t *);
extern tcudaStreamEndCapture *cudaStreamEndCapture;
typedef cudaError_t  CUDAAPI tcudaStreamIsCapturing(cudaStream_t, enum cudaStreamCaptureStatus *);
extern tcudaStreamIsCapturing *cudaStreamIsCapturing;
typedef cudaError_t  CUDAAPI tcudaStreamGetCaptureInfo(cudaStream_t, enum cudaStreamCaptureStatus *, unsigned long long *);
extern tcudaStreamGetCaptureInfo *cudaStreamGetCaptureInfo;
typedef cudaError_t  CUDAAPI tcudaStreamGetCaptureInfo_v2(cudaStream_t, enum cudaStreamCaptureStatus *, unsigned long long *, cudaGraph_t *, const cudaGraphNode_t **, size_t *);
extern tcudaStreamGetCaptureInfo_v2 *cudaStreamGetCaptureInfo_v2;
typedef cudaError_t  CUDAAPI tcudaStreamUpdateCaptureDependencies(cudaStream_t, cudaGraphNode_t *, size_t, unsigned int);
extern tcudaStreamUpdateCaptureDependencies *cudaStreamUpdateCaptureDependencies;
typedef cudaError_t  CUDAAPI tcudaEventCreate(cudaEvent_t *);
extern tcudaEventCreate *cudaEventCreate;
typedef cudaError_t  CUDAAPI tcudaEventCreateWithFlags(cudaEvent_t *, unsigned int);
extern tcudaEventCreateWithFlags *cudaEventCreateWithFlags;
typedef cudaError_t  CUDAAPI tcudaEventRecord(cudaEvent_t, cudaStream_t);
extern tcudaEventRecord *cudaEventRecord;
typedef cudaError_t  CUDAAPI tcudaEventRecordWithFlags(cudaEvent_t, cudaStream_t, unsigned int);
extern tcudaEventRecordWithFlags *cudaEventRecordWithFlags;
typedef cudaError_t  CUDAAPI tcudaEventQuery(cudaEvent_t);
extern tcudaEventQuery *cudaEventQuery;
typedef cudaError_t  CUDAAPI tcudaEventSynchronize(cudaEvent_t);
extern tcudaEventSynchronize *cudaEventSynchronize;
typedef cudaError_t  CUDAAPI tcudaEventDestroy(cudaEvent_t);
extern tcudaEventDestroy *cudaEventDestroy;
typedef cudaError_t  CUDAAPI tcudaEventElapsedTime(float *, cudaEvent_t, cudaEvent_t);
extern tcudaEventElapsedTime *cudaEventElapsedTime;
typedef cudaError_t  CUDAAPI tcudaImportExternalMemory(cudaExternalMemory_t *, const struct cudaExternalMemoryHandleDesc *);
extern tcudaImportExternalMemory *cudaImportExternalMemory;
typedef cudaError_t  CUDAAPI tcudaExternalMemoryGetMappedBuffer(void **, cudaExternalMemory_t, const struct cudaExternalMemoryBufferDesc *);
extern tcudaExternalMemoryGetMappedBuffer *cudaExternalMemoryGetMappedBuffer;
typedef cudaError_t  CUDAAPI tcudaExternalMemoryGetMappedMipmappedArray(cudaMipmappedArray_t *, cudaExternalMemory_t, const struct cudaExternalMemoryMipmappedArrayDesc *);
extern tcudaExternalMemoryGetMappedMipmappedArray *cudaExternalMemoryGetMappedMipmappedArray;
typedef cudaError_t  CUDAAPI tcudaDestroyExternalMemory(cudaExternalMemory_t);
extern tcudaDestroyExternalMemory *cudaDestroyExternalMemory;
typedef cudaError_t  CUDAAPI tcudaImportExternalSemaphore(cudaExternalSemaphore_t *, const struct cudaExternalSemaphoreHandleDesc *);
extern tcudaImportExternalSemaphore *cudaImportExternalSemaphore;
typedef cudaError_t  CUDAAPI tcudaSignalExternalSemaphoresAsync_v2(const cudaExternalSemaphore_t *, const struct cudaExternalSemaphoreSignalParams *, unsigned int, cudaStream_t);
extern tcudaSignalExternalSemaphoresAsync_v2 *cudaSignalExternalSemaphoresAsync_v2;
typedef cudaError_t  CUDAAPI tcudaWaitExternalSemaphoresAsync_v2(const cudaExternalSemaphore_t *, const struct cudaExternalSemaphoreWaitParams *, unsigned int, cudaStream_t);
extern tcudaWaitExternalSemaphoresAsync_v2 *cudaWaitExternalSemaphoresAsync_v2;
typedef cudaError_t  CUDAAPI tcudaDestroyExternalSemaphore(cudaExternalSemaphore_t);
extern tcudaDestroyExternalSemaphore *cudaDestroyExternalSemaphore;
typedef cudaError_t  CUDAAPI tcudaLaunchKernel(const void *, dim3, dim3, void **, size_t, cudaStream_t);
extern tcudaLaunchKernel *cudaLaunchKernel;
typedef cudaError_t  CUDAAPI tcudaLaunchCooperativeKernel(const void *, dim3, dim3, void **, size_t, cudaStream_t);
extern tcudaLaunchCooperativeKernel *cudaLaunchCooperativeKernel;
typedef cudaError_t  CUDAAPI tcudaLaunchCooperativeKernelMultiDevice(struct cudaLaunchParams *, unsigned int, unsigned int);
extern tcudaLaunchCooperativeKernelMultiDevice *cudaLaunchCooperativeKernelMultiDevice;
typedef cudaError_t  CUDAAPI tcudaFuncSetCacheConfig(const void *, enum cudaFuncCache);
extern tcudaFuncSetCacheConfig *cudaFuncSetCacheConfig;
typedef cudaError_t  CUDAAPI tcudaFuncSetSharedMemConfig(const void *, enum cudaSharedMemConfig);
extern tcudaFuncSetSharedMemConfig *cudaFuncSetSharedMemConfig;
typedef cudaError_t  CUDAAPI tcudaFuncGetAttributes(struct cudaFuncAttributes *, const void *);
extern tcudaFuncGetAttributes *cudaFuncGetAttributes;
typedef cudaError_t  CUDAAPI tcudaFuncSetAttribute(const void *, enum cudaFuncAttribute, int);
extern tcudaFuncSetAttribute *cudaFuncSetAttribute;
typedef cudaError_t  CUDAAPI tcudaSetDoubleForDevice(double *);
extern tcudaSetDoubleForDevice *cudaSetDoubleForDevice;
typedef cudaError_t  CUDAAPI tcudaSetDoubleForHost(double *);
extern tcudaSetDoubleForHost *cudaSetDoubleForHost;
typedef cudaError_t  CUDAAPI tcudaLaunchHostFunc(cudaStream_t, cudaHostFn_t, void *);
extern tcudaLaunchHostFunc *cudaLaunchHostFunc;
typedef cudaError_t  CUDAAPI tcudaOccupancyMaxActiveBlocksPerMultiprocessor(int *, const void *, int, size_t);
extern tcudaOccupancyMaxActiveBlocksPerMultiprocessor *cudaOccupancyMaxActiveBlocksPerMultiprocessor;
typedef cudaError_t  CUDAAPI tcudaOccupancyAvailableDynamicSMemPerBlock(size_t *, const void *, int, int);
extern tcudaOccupancyAvailableDynamicSMemPerBlock *cudaOccupancyAvailableDynamicSMemPerBlock;
typedef cudaError_t  CUDAAPI tcudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *, const void *, int, size_t, unsigned int);
extern tcudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags *cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags;
typedef cudaError_t  CUDAAPI tcudaMallocManaged(void **, size_t, unsigned int);
extern tcudaMallocManaged *cudaMallocManaged;
typedef cudaError_t  CUDAAPI tcudaMalloc(void **, size_t);
extern tcudaMalloc *cudaMalloc;
typedef cudaError_t  CUDAAPI tcudaMallocHost(void **, size_t);
extern tcudaMallocHost *cudaMallocHost;
typedef cudaError_t  CUDAAPI tcudaMallocPitch(void **, size_t *, size_t, size_t);
extern tcudaMallocPitch *cudaMallocPitch;
typedef cudaError_t  CUDAAPI tcudaMallocArray(cudaArray_t *, const struct cudaChannelFormatDesc *, size_t, size_t, unsigned int);
extern tcudaMallocArray *cudaMallocArray;
typedef cudaError_t  CUDAAPI tcudaFree(void *);
extern tcudaFree *cudaFree;
typedef cudaError_t  CUDAAPI tcudaFreeHost(void *);
extern tcudaFreeHost *cudaFreeHost;
typedef cudaError_t  CUDAAPI tcudaFreeArray(cudaArray_t);
extern tcudaFreeArray *cudaFreeArray;
typedef cudaError_t  CUDAAPI tcudaFreeMipmappedArray(cudaMipmappedArray_t);
extern tcudaFreeMipmappedArray *cudaFreeMipmappedArray;
typedef cudaError_t  CUDAAPI tcudaHostAlloc(void **, size_t, unsigned int);
extern tcudaHostAlloc *cudaHostAlloc;
typedef cudaError_t  CUDAAPI tcudaHostRegister(void *, size_t, unsigned int);
extern tcudaHostRegister *cudaHostRegister;
typedef cudaError_t  CUDAAPI tcudaHostUnregister(void *);
extern tcudaHostUnregister *cudaHostUnregister;
typedef cudaError_t  CUDAAPI tcudaHostGetDevicePointer(void **, void *, unsigned int);
extern tcudaHostGetDevicePointer *cudaHostGetDevicePointer;
typedef cudaError_t  CUDAAPI tcudaHostGetFlags(unsigned int *, void *);
extern tcudaHostGetFlags *cudaHostGetFlags;
typedef cudaError_t  CUDAAPI tcudaMalloc3D(struct cudaPitchedPtr *, struct cudaExtent);
extern tcudaMalloc3D *cudaMalloc3D;
typedef cudaError_t  CUDAAPI tcudaMalloc3DArray(cudaArray_t *, const struct cudaChannelFormatDesc *, struct cudaExtent, unsigned int);
extern tcudaMalloc3DArray *cudaMalloc3DArray;
typedef cudaError_t  CUDAAPI tcudaMallocMipmappedArray(cudaMipmappedArray_t *, const struct cudaChannelFormatDesc *, struct cudaExtent, unsigned int, unsigned int);
extern tcudaMallocMipmappedArray *cudaMallocMipmappedArray;
typedef cudaError_t  CUDAAPI tcudaGetMipmappedArrayLevel(cudaArray_t *, cudaMipmappedArray_const_t, unsigned int);
extern tcudaGetMipmappedArrayLevel *cudaGetMipmappedArrayLevel;
typedef cudaError_t  CUDAAPI tcudaMemcpy3D(const struct cudaMemcpy3DParms *);
extern tcudaMemcpy3D *cudaMemcpy3D;
typedef cudaError_t  CUDAAPI tcudaMemcpy3DPeer(const struct cudaMemcpy3DPeerParms *);
extern tcudaMemcpy3DPeer *cudaMemcpy3DPeer;
typedef cudaError_t  CUDAAPI tcudaMemcpy3DAsync(const struct cudaMemcpy3DParms *, cudaStream_t);
extern tcudaMemcpy3DAsync *cudaMemcpy3DAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpy3DPeerAsync(const struct cudaMemcpy3DPeerParms *, cudaStream_t);
extern tcudaMemcpy3DPeerAsync *cudaMemcpy3DPeerAsync;
typedef cudaError_t  CUDAAPI tcudaMemGetInfo(size_t *, size_t *);
extern tcudaMemGetInfo *cudaMemGetInfo;
typedef cudaError_t  CUDAAPI tcudaArrayGetInfo(struct cudaChannelFormatDesc *, struct cudaExtent *, unsigned int *, cudaArray_t);
extern tcudaArrayGetInfo *cudaArrayGetInfo;
typedef cudaError_t  CUDAAPI tcudaArrayGetPlane(cudaArray_t *, cudaArray_t, unsigned int);
extern tcudaArrayGetPlane *cudaArrayGetPlane;
typedef cudaError_t  CUDAAPI tcudaArrayGetSparseProperties(struct cudaArraySparseProperties *, cudaArray_t);
extern tcudaArrayGetSparseProperties *cudaArrayGetSparseProperties;
typedef cudaError_t  CUDAAPI tcudaMipmappedArrayGetSparseProperties(struct cudaArraySparseProperties *, cudaMipmappedArray_t);
extern tcudaMipmappedArrayGetSparseProperties *cudaMipmappedArrayGetSparseProperties;
typedef cudaError_t  CUDAAPI tcudaMemcpy(void *, const void *, size_t, enum cudaMemcpyKind);
extern tcudaMemcpy *cudaMemcpy;
typedef cudaError_t  CUDAAPI tcudaMemcpyPeer(void *, int, const void *, int, size_t);
extern tcudaMemcpyPeer *cudaMemcpyPeer;
typedef cudaError_t  CUDAAPI tcudaMemcpy2D(void *, size_t, const void *, size_t, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpy2D *cudaMemcpy2D;
typedef cudaError_t  CUDAAPI tcudaMemcpy2DToArray(cudaArray_t, size_t, size_t, const void *, size_t, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpy2DToArray *cudaMemcpy2DToArray;
typedef cudaError_t  CUDAAPI tcudaMemcpy2DFromArray(void *, size_t, cudaArray_const_t, size_t, size_t, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpy2DFromArray *cudaMemcpy2DFromArray;
typedef cudaError_t  CUDAAPI tcudaMemcpy2DArrayToArray(cudaArray_t, size_t, size_t, cudaArray_const_t, size_t, size_t, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpy2DArrayToArray *cudaMemcpy2DArrayToArray;
typedef cudaError_t  CUDAAPI tcudaMemcpyToSymbol(const void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpyToSymbol *cudaMemcpyToSymbol;
typedef cudaError_t  CUDAAPI tcudaMemcpyFromSymbol(void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpyFromSymbol *cudaMemcpyFromSymbol;
typedef cudaError_t  CUDAAPI tcudaMemcpyAsync(void *, const void *, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpyAsync *cudaMemcpyAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpyPeerAsync(void *, int, const void *, int, size_t, cudaStream_t);
extern tcudaMemcpyPeerAsync *cudaMemcpyPeerAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpy2DAsync(void *, size_t, const void *, size_t, size_t, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpy2DAsync *cudaMemcpy2DAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpy2DToArrayAsync(cudaArray_t, size_t, size_t, const void *, size_t, size_t, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpy2DToArrayAsync *cudaMemcpy2DToArrayAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpy2DFromArrayAsync(void *, size_t, cudaArray_const_t, size_t, size_t, size_t, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpy2DFromArrayAsync *cudaMemcpy2DFromArrayAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpyToSymbolAsync(const void *, const void *, size_t, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpyToSymbolAsync *cudaMemcpyToSymbolAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpyFromSymbolAsync(void *, const void *, size_t, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpyFromSymbolAsync *cudaMemcpyFromSymbolAsync;
typedef cudaError_t  CUDAAPI tcudaMemset(void *, int, size_t);
extern tcudaMemset *cudaMemset;
typedef cudaError_t  CUDAAPI tcudaMemset2D(void *, size_t, int, size_t, size_t);
extern tcudaMemset2D *cudaMemset2D;
typedef cudaError_t  CUDAAPI tcudaMemset3D(struct cudaPitchedPtr, int, struct cudaExtent);
extern tcudaMemset3D *cudaMemset3D;
typedef cudaError_t  CUDAAPI tcudaMemsetAsync(void *, int, size_t, cudaStream_t);
extern tcudaMemsetAsync *cudaMemsetAsync;
typedef cudaError_t  CUDAAPI tcudaMemset2DAsync(void *, size_t, int, size_t, size_t, cudaStream_t);
extern tcudaMemset2DAsync *cudaMemset2DAsync;
typedef cudaError_t  CUDAAPI tcudaMemset3DAsync(struct cudaPitchedPtr, int, struct cudaExtent, cudaStream_t);
extern tcudaMemset3DAsync *cudaMemset3DAsync;
typedef cudaError_t  CUDAAPI tcudaGetSymbolAddress(void **, const void *);
extern tcudaGetSymbolAddress *cudaGetSymbolAddress;
typedef cudaError_t  CUDAAPI tcudaGetSymbolSize(size_t *, const void *);
extern tcudaGetSymbolSize *cudaGetSymbolSize;
typedef cudaError_t  CUDAAPI tcudaMemPrefetchAsync(const void *, size_t, int, cudaStream_t);
extern tcudaMemPrefetchAsync *cudaMemPrefetchAsync;
typedef cudaError_t  CUDAAPI tcudaMemAdvise(const void *, size_t, enum cudaMemoryAdvise, int);
extern tcudaMemAdvise *cudaMemAdvise;
typedef cudaError_t  CUDAAPI tcudaMemRangeGetAttribute(void *, size_t, enum cudaMemRangeAttribute, const void *, size_t);
extern tcudaMemRangeGetAttribute *cudaMemRangeGetAttribute;
typedef cudaError_t  CUDAAPI tcudaMemRangeGetAttributes(void **, size_t *, enum cudaMemRangeAttribute *, size_t, const void *, size_t);
extern tcudaMemRangeGetAttributes *cudaMemRangeGetAttributes;
typedef cudaError_t  CUDAAPI tcudaMemcpyToArray(cudaArray_t, size_t, size_t, const void *, size_t, enum cudaMemcpyKind);
extern tcudaMemcpyToArray *cudaMemcpyToArray;
typedef cudaError_t  CUDAAPI tcudaMemcpyFromArray(void *, cudaArray_const_t, size_t, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpyFromArray *cudaMemcpyFromArray;
typedef cudaError_t  CUDAAPI tcudaMemcpyArrayToArray(cudaArray_t, size_t, size_t, cudaArray_const_t, size_t, size_t, size_t, enum cudaMemcpyKind);
extern tcudaMemcpyArrayToArray *cudaMemcpyArrayToArray;
typedef cudaError_t  CUDAAPI tcudaMemcpyToArrayAsync(cudaArray_t, size_t, size_t, const void *, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpyToArrayAsync *cudaMemcpyToArrayAsync;
typedef cudaError_t  CUDAAPI tcudaMemcpyFromArrayAsync(void *, cudaArray_const_t, size_t, size_t, size_t, enum cudaMemcpyKind, cudaStream_t);
extern tcudaMemcpyFromArrayAsync *cudaMemcpyFromArrayAsync;
typedef cudaError_t  CUDAAPI tcudaMallocAsync(void **, size_t, cudaStream_t);
extern tcudaMallocAsync *cudaMallocAsync;
typedef cudaError_t  CUDAAPI tcudaFreeAsync(void *, cudaStream_t);
extern tcudaFreeAsync *cudaFreeAsync;
typedef cudaError_t  CUDAAPI tcudaMemPoolTrimTo(cudaMemPool_t, size_t);
extern tcudaMemPoolTrimTo *cudaMemPoolTrimTo;
typedef cudaError_t  CUDAAPI tcudaMemPoolSetAttribute(cudaMemPool_t, enum cudaMemPoolAttr, void *);
extern tcudaMemPoolSetAttribute *cudaMemPoolSetAttribute;
typedef cudaError_t  CUDAAPI tcudaMemPoolGetAttribute(cudaMemPool_t, enum cudaMemPoolAttr, void *);
extern tcudaMemPoolGetAttribute *cudaMemPoolGetAttribute;
typedef cudaError_t  CUDAAPI tcudaMemPoolSetAccess(cudaMemPool_t, const struct cudaMemAccessDesc *, size_t);
extern tcudaMemPoolSetAccess *cudaMemPoolSetAccess;
typedef cudaError_t  CUDAAPI tcudaMemPoolGetAccess(enum cudaMemAccessFlags *, cudaMemPool_t, struct cudaMemLocation *);
extern tcudaMemPoolGetAccess *cudaMemPoolGetAccess;
typedef cudaError_t  CUDAAPI tcudaMemPoolCreate(cudaMemPool_t *, const struct cudaMemPoolProps *);
extern tcudaMemPoolCreate *cudaMemPoolCreate;
typedef cudaError_t  CUDAAPI tcudaMemPoolDestroy(cudaMemPool_t);
extern tcudaMemPoolDestroy *cudaMemPoolDestroy;
typedef cudaError_t  CUDAAPI tcudaMallocFromPoolAsync(void **, size_t, cudaMemPool_t, cudaStream_t);
extern tcudaMallocFromPoolAsync *cudaMallocFromPoolAsync;
typedef cudaError_t  CUDAAPI tcudaMemPoolExportToShareableHandle(void *, cudaMemPool_t, enum cudaMemAllocationHandleType, unsigned int);
extern tcudaMemPoolExportToShareableHandle *cudaMemPoolExportToShareableHandle;
typedef cudaError_t  CUDAAPI tcudaMemPoolImportFromShareableHandle(cudaMemPool_t *, void *, enum cudaMemAllocationHandleType, unsigned int);
extern tcudaMemPoolImportFromShareableHandle *cudaMemPoolImportFromShareableHandle;
typedef cudaError_t  CUDAAPI tcudaMemPoolExportPointer(struct cudaMemPoolPtrExportData *, void *);
extern tcudaMemPoolExportPointer *cudaMemPoolExportPointer;
typedef cudaError_t  CUDAAPI tcudaMemPoolImportPointer(void **, cudaMemPool_t, struct cudaMemPoolPtrExportData *);
extern tcudaMemPoolImportPointer *cudaMemPoolImportPointer;
typedef cudaError_t  CUDAAPI tcudaPointerGetAttributes(struct cudaPointerAttributes *, const void *);
extern tcudaPointerGetAttributes *cudaPointerGetAttributes;
typedef cudaError_t  CUDAAPI tcudaDeviceCanAccessPeer(int *, int, int);
extern tcudaDeviceCanAccessPeer *cudaDeviceCanAccessPeer;
typedef cudaError_t  CUDAAPI tcudaDeviceEnablePeerAccess(int, unsigned int);
extern tcudaDeviceEnablePeerAccess *cudaDeviceEnablePeerAccess;
typedef cudaError_t  CUDAAPI tcudaDeviceDisablePeerAccess(int);
extern tcudaDeviceDisablePeerAccess *cudaDeviceDisablePeerAccess;
typedef cudaError_t  CUDAAPI tcudaGraphicsUnregisterResource(cudaGraphicsResource_t);
extern tcudaGraphicsUnregisterResource *cudaGraphicsUnregisterResource;
typedef cudaError_t  CUDAAPI tcudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t, unsigned int);
extern tcudaGraphicsResourceSetMapFlags *cudaGraphicsResourceSetMapFlags;
typedef cudaError_t  CUDAAPI tcudaGraphicsMapResources(int, cudaGraphicsResource_t *, cudaStream_t);
extern tcudaGraphicsMapResources *cudaGraphicsMapResources;
typedef cudaError_t  CUDAAPI tcudaGraphicsUnmapResources(int, cudaGraphicsResource_t *, cudaStream_t);
extern tcudaGraphicsUnmapResources *cudaGraphicsUnmapResources;
typedef cudaError_t  CUDAAPI tcudaGraphicsResourceGetMappedPointer(void **, size_t *, cudaGraphicsResource_t);
extern tcudaGraphicsResourceGetMappedPointer *cudaGraphicsResourceGetMappedPointer;
typedef cudaError_t  CUDAAPI tcudaGraphicsSubResourceGetMappedArray(cudaArray_t *, cudaGraphicsResource_t, unsigned int, unsigned int);
extern tcudaGraphicsSubResourceGetMappedArray *cudaGraphicsSubResourceGetMappedArray;
typedef cudaError_t  CUDAAPI tcudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t *, cudaGraphicsResource_t);
extern tcudaGraphicsResourceGetMappedMipmappedArray *cudaGraphicsResourceGetMappedMipmappedArray;
typedef cudaError_t  CUDAAPI tcudaBindTexture(size_t *, const struct textureReference *, const void *, const struct cudaChannelFormatDesc *, size_t);
extern tcudaBindTexture *cudaBindTexture;
typedef cudaError_t  CUDAAPI tcudaBindTexture2D(size_t *, const struct textureReference *, const void *, const struct cudaChannelFormatDesc *, size_t, size_t, size_t);
extern tcudaBindTexture2D *cudaBindTexture2D;
typedef cudaError_t  CUDAAPI tcudaBindTextureToArray(const struct textureReference *, cudaArray_const_t, const struct cudaChannelFormatDesc *);
extern tcudaBindTextureToArray *cudaBindTextureToArray;
typedef cudaError_t  CUDAAPI tcudaBindTextureToMipmappedArray(const struct textureReference *, cudaMipmappedArray_const_t, const struct cudaChannelFormatDesc *);
extern tcudaBindTextureToMipmappedArray *cudaBindTextureToMipmappedArray;
typedef cudaError_t  CUDAAPI tcudaUnbindTexture(const struct textureReference *);
extern tcudaUnbindTexture *cudaUnbindTexture;
typedef cudaError_t  CUDAAPI tcudaGetTextureAlignmentOffset(size_t *, const struct textureReference *);
extern tcudaGetTextureAlignmentOffset *cudaGetTextureAlignmentOffset;
typedef cudaError_t  CUDAAPI tcudaGetTextureReference(const struct textureReference **, const void *);
extern tcudaGetTextureReference *cudaGetTextureReference;
typedef cudaError_t  CUDAAPI tcudaBindSurfaceToArray(const struct surfaceReference *, cudaArray_const_t, const struct cudaChannelFormatDesc *);
extern tcudaBindSurfaceToArray *cudaBindSurfaceToArray;
typedef cudaError_t  CUDAAPI tcudaGetSurfaceReference(const struct surfaceReference **, const void *);
extern tcudaGetSurfaceReference *cudaGetSurfaceReference;
typedef cudaError_t  CUDAAPI tcudaGetChannelDesc(struct cudaChannelFormatDesc *, cudaArray_const_t);
extern tcudaGetChannelDesc *cudaGetChannelDesc;
typedef struct cudaChannelFormatDesc  CUDAAPI tcudaCreateChannelDesc(int, int, int, int, enum cudaChannelFormatKind);
extern tcudaCreateChannelDesc *cudaCreateChannelDesc;
typedef cudaError_t  CUDAAPI tcudaCreateTextureObject(cudaTextureObject_t *, const struct cudaResourceDesc *, const struct cudaTextureDesc *, const struct cudaResourceViewDesc *);
extern tcudaCreateTextureObject *cudaCreateTextureObject;
typedef cudaError_t  CUDAAPI tcudaDestroyTextureObject(cudaTextureObject_t);
extern tcudaDestroyTextureObject *cudaDestroyTextureObject;
typedef cudaError_t  CUDAAPI tcudaGetTextureObjectResourceDesc(struct cudaResourceDesc *, cudaTextureObject_t);
extern tcudaGetTextureObjectResourceDesc *cudaGetTextureObjectResourceDesc;
typedef cudaError_t  CUDAAPI tcudaGetTextureObjectTextureDesc(struct cudaTextureDesc *, cudaTextureObject_t);
extern tcudaGetTextureObjectTextureDesc *cudaGetTextureObjectTextureDesc;
typedef cudaError_t  CUDAAPI tcudaGetTextureObjectResourceViewDesc(struct cudaResourceViewDesc *, cudaTextureObject_t);
extern tcudaGetTextureObjectResourceViewDesc *cudaGetTextureObjectResourceViewDesc;
typedef cudaError_t  CUDAAPI tcudaCreateSurfaceObject(cudaSurfaceObject_t *, const struct cudaResourceDesc *);
extern tcudaCreateSurfaceObject *cudaCreateSurfaceObject;
typedef cudaError_t  CUDAAPI tcudaDestroySurfaceObject(cudaSurfaceObject_t);
extern tcudaDestroySurfaceObject *cudaDestroySurfaceObject;
typedef cudaError_t  CUDAAPI tcudaGetSurfaceObjectResourceDesc(struct cudaResourceDesc *, cudaSurfaceObject_t);
extern tcudaGetSurfaceObjectResourceDesc *cudaGetSurfaceObjectResourceDesc;
typedef cudaError_t  CUDAAPI tcudaDriverGetVersion(int *);
extern tcudaDriverGetVersion *cudaDriverGetVersion;
typedef cudaError_t  CUDAAPI tcudaRuntimeGetVersion(int *);
extern tcudaRuntimeGetVersion *cudaRuntimeGetVersion;
typedef cudaError_t  CUDAAPI tcudaGraphCreate(cudaGraph_t *, unsigned int);
extern tcudaGraphCreate *cudaGraphCreate;
typedef cudaError_t  CUDAAPI tcudaGraphAddKernelNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const struct cudaKernelNodeParams *);
extern tcudaGraphAddKernelNode *cudaGraphAddKernelNode;
typedef cudaError_t  CUDAAPI tcudaGraphKernelNodeGetParams(cudaGraphNode_t, struct cudaKernelNodeParams *);
extern tcudaGraphKernelNodeGetParams *cudaGraphKernelNodeGetParams;
typedef cudaError_t  CUDAAPI tcudaGraphKernelNodeSetParams(cudaGraphNode_t, const struct cudaKernelNodeParams *);
extern tcudaGraphKernelNodeSetParams *cudaGraphKernelNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphKernelNodeCopyAttributes(cudaGraphNode_t, cudaGraphNode_t);
extern tcudaGraphKernelNodeCopyAttributes *cudaGraphKernelNodeCopyAttributes;
typedef cudaError_t  CUDAAPI tcudaGraphKernelNodeGetAttribute(cudaGraphNode_t, enum cudaKernelNodeAttrID, union cudaKernelNodeAttrValue *);
extern tcudaGraphKernelNodeGetAttribute *cudaGraphKernelNodeGetAttribute;
typedef cudaError_t  CUDAAPI tcudaGraphKernelNodeSetAttribute(cudaGraphNode_t, enum cudaKernelNodeAttrID, const union cudaKernelNodeAttrValue *);
extern tcudaGraphKernelNodeSetAttribute *cudaGraphKernelNodeSetAttribute;
typedef cudaError_t  CUDAAPI tcudaGraphAddMemcpyNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const struct cudaMemcpy3DParms *);
extern tcudaGraphAddMemcpyNode *cudaGraphAddMemcpyNode;
typedef cudaError_t  CUDAAPI tcudaGraphAddMemcpyNodeToSymbol(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaGraphAddMemcpyNodeToSymbol *cudaGraphAddMemcpyNodeToSymbol;
typedef cudaError_t  CUDAAPI tcudaGraphAddMemcpyNodeFromSymbol(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaGraphAddMemcpyNodeFromSymbol *cudaGraphAddMemcpyNodeFromSymbol;
typedef cudaError_t  CUDAAPI tcudaGraphAddMemcpyNode1D(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, void *, const void *, size_t, enum cudaMemcpyKind);
extern tcudaGraphAddMemcpyNode1D *cudaGraphAddMemcpyNode1D;
typedef cudaError_t  CUDAAPI tcudaGraphMemcpyNodeGetParams(cudaGraphNode_t, struct cudaMemcpy3DParms *);
extern tcudaGraphMemcpyNodeGetParams *cudaGraphMemcpyNodeGetParams;
typedef cudaError_t  CUDAAPI tcudaGraphMemcpyNodeSetParams(cudaGraphNode_t, const struct cudaMemcpy3DParms *);
extern tcudaGraphMemcpyNodeSetParams *cudaGraphMemcpyNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphMemcpyNodeSetParamsToSymbol(cudaGraphNode_t, const void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaGraphMemcpyNodeSetParamsToSymbol *cudaGraphMemcpyNodeSetParamsToSymbol;
typedef cudaError_t  CUDAAPI tcudaGraphMemcpyNodeSetParamsFromSymbol(cudaGraphNode_t, void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaGraphMemcpyNodeSetParamsFromSymbol *cudaGraphMemcpyNodeSetParamsFromSymbol;
typedef cudaError_t  CUDAAPI tcudaGraphMemcpyNodeSetParams1D(cudaGraphNode_t, void *, const void *, size_t, enum cudaMemcpyKind);
extern tcudaGraphMemcpyNodeSetParams1D *cudaGraphMemcpyNodeSetParams1D;
typedef cudaError_t  CUDAAPI tcudaGraphAddMemsetNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const struct cudaMemsetParams *);
extern tcudaGraphAddMemsetNode *cudaGraphAddMemsetNode;
typedef cudaError_t  CUDAAPI tcudaGraphMemsetNodeGetParams(cudaGraphNode_t, struct cudaMemsetParams *);
extern tcudaGraphMemsetNodeGetParams *cudaGraphMemsetNodeGetParams;
typedef cudaError_t  CUDAAPI tcudaGraphMemsetNodeSetParams(cudaGraphNode_t, const struct cudaMemsetParams *);
extern tcudaGraphMemsetNodeSetParams *cudaGraphMemsetNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphAddHostNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const struct cudaHostNodeParams *);
extern tcudaGraphAddHostNode *cudaGraphAddHostNode;
typedef cudaError_t  CUDAAPI tcudaGraphHostNodeGetParams(cudaGraphNode_t, struct cudaHostNodeParams *);
extern tcudaGraphHostNodeGetParams *cudaGraphHostNodeGetParams;
typedef cudaError_t  CUDAAPI tcudaGraphHostNodeSetParams(cudaGraphNode_t, const struct cudaHostNodeParams *);
extern tcudaGraphHostNodeSetParams *cudaGraphHostNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphAddChildGraphNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, cudaGraph_t);
extern tcudaGraphAddChildGraphNode *cudaGraphAddChildGraphNode;
typedef cudaError_t  CUDAAPI tcudaGraphChildGraphNodeGetGraph(cudaGraphNode_t, cudaGraph_t *);
extern tcudaGraphChildGraphNodeGetGraph *cudaGraphChildGraphNodeGetGraph;
typedef cudaError_t  CUDAAPI tcudaGraphAddEmptyNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t);
extern tcudaGraphAddEmptyNode *cudaGraphAddEmptyNode;
typedef cudaError_t  CUDAAPI tcudaGraphAddEventRecordNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, cudaEvent_t);
extern tcudaGraphAddEventRecordNode *cudaGraphAddEventRecordNode;
typedef cudaError_t  CUDAAPI tcudaGraphEventRecordNodeGetEvent(cudaGraphNode_t, cudaEvent_t *);
extern tcudaGraphEventRecordNodeGetEvent *cudaGraphEventRecordNodeGetEvent;
typedef cudaError_t  CUDAAPI tcudaGraphEventRecordNodeSetEvent(cudaGraphNode_t, cudaEvent_t);
extern tcudaGraphEventRecordNodeSetEvent *cudaGraphEventRecordNodeSetEvent;
typedef cudaError_t  CUDAAPI tcudaGraphAddEventWaitNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, cudaEvent_t);
extern tcudaGraphAddEventWaitNode *cudaGraphAddEventWaitNode;
typedef cudaError_t  CUDAAPI tcudaGraphEventWaitNodeGetEvent(cudaGraphNode_t, cudaEvent_t *);
extern tcudaGraphEventWaitNodeGetEvent *cudaGraphEventWaitNodeGetEvent;
typedef cudaError_t  CUDAAPI tcudaGraphEventWaitNodeSetEvent(cudaGraphNode_t, cudaEvent_t);
extern tcudaGraphEventWaitNodeSetEvent *cudaGraphEventWaitNodeSetEvent;
typedef cudaError_t  CUDAAPI tcudaGraphAddExternalSemaphoresSignalNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const struct cudaExternalSemaphoreSignalNodeParams *);
extern tcudaGraphAddExternalSemaphoresSignalNode *cudaGraphAddExternalSemaphoresSignalNode;
typedef cudaError_t  CUDAAPI tcudaGraphExternalSemaphoresSignalNodeGetParams(cudaGraphNode_t, struct cudaExternalSemaphoreSignalNodeParams *);
extern tcudaGraphExternalSemaphoresSignalNodeGetParams *cudaGraphExternalSemaphoresSignalNodeGetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExternalSemaphoresSignalNodeSetParams(cudaGraphNode_t, const struct cudaExternalSemaphoreSignalNodeParams *);
extern tcudaGraphExternalSemaphoresSignalNodeSetParams *cudaGraphExternalSemaphoresSignalNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphAddExternalSemaphoresWaitNode(cudaGraphNode_t *, cudaGraph_t, const cudaGraphNode_t *, size_t, const struct cudaExternalSemaphoreWaitNodeParams *);
extern tcudaGraphAddExternalSemaphoresWaitNode *cudaGraphAddExternalSemaphoresWaitNode;
typedef cudaError_t  CUDAAPI tcudaGraphExternalSemaphoresWaitNodeGetParams(cudaGraphNode_t, struct cudaExternalSemaphoreWaitNodeParams *);
extern tcudaGraphExternalSemaphoresWaitNodeGetParams *cudaGraphExternalSemaphoresWaitNodeGetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExternalSemaphoresWaitNodeSetParams(cudaGraphNode_t, const struct cudaExternalSemaphoreWaitNodeParams *);
extern tcudaGraphExternalSemaphoresWaitNodeSetParams *cudaGraphExternalSemaphoresWaitNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphClone(cudaGraph_t *, cudaGraph_t);
extern tcudaGraphClone *cudaGraphClone;
typedef cudaError_t  CUDAAPI tcudaGraphNodeFindInClone(cudaGraphNode_t *, cudaGraphNode_t, cudaGraph_t);
extern tcudaGraphNodeFindInClone *cudaGraphNodeFindInClone;
typedef cudaError_t  CUDAAPI tcudaGraphNodeGetType(cudaGraphNode_t, enum cudaGraphNodeType *);
extern tcudaGraphNodeGetType *cudaGraphNodeGetType;
typedef cudaError_t  CUDAAPI tcudaGraphGetNodes(cudaGraph_t, cudaGraphNode_t *, size_t *);
extern tcudaGraphGetNodes *cudaGraphGetNodes;
typedef cudaError_t  CUDAAPI tcudaGraphGetRootNodes(cudaGraph_t, cudaGraphNode_t *, size_t *);
extern tcudaGraphGetRootNodes *cudaGraphGetRootNodes;
typedef cudaError_t  CUDAAPI tcudaGraphGetEdges(cudaGraph_t, cudaGraphNode_t *, cudaGraphNode_t *, size_t *);
extern tcudaGraphGetEdges *cudaGraphGetEdges;
typedef cudaError_t  CUDAAPI tcudaGraphNodeGetDependencies(cudaGraphNode_t, cudaGraphNode_t *, size_t *);
extern tcudaGraphNodeGetDependencies *cudaGraphNodeGetDependencies;
typedef cudaError_t  CUDAAPI tcudaGraphNodeGetDependentNodes(cudaGraphNode_t, cudaGraphNode_t *, size_t *);
extern tcudaGraphNodeGetDependentNodes *cudaGraphNodeGetDependentNodes;
typedef cudaError_t  CUDAAPI tcudaGraphAddDependencies(cudaGraph_t, const cudaGraphNode_t *, const cudaGraphNode_t *, size_t);
extern tcudaGraphAddDependencies *cudaGraphAddDependencies;
typedef cudaError_t  CUDAAPI tcudaGraphRemoveDependencies(cudaGraph_t, const cudaGraphNode_t *, const cudaGraphNode_t *, size_t);
extern tcudaGraphRemoveDependencies *cudaGraphRemoveDependencies;
typedef cudaError_t  CUDAAPI tcudaGraphDestroyNode(cudaGraphNode_t);
extern tcudaGraphDestroyNode *cudaGraphDestroyNode;
typedef cudaError_t  CUDAAPI tcudaGraphInstantiate(cudaGraphExec_t *, cudaGraph_t, cudaGraphNode_t *, char *, size_t);
extern tcudaGraphInstantiate *cudaGraphInstantiate;
typedef cudaError_t  CUDAAPI tcudaGraphExecKernelNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, const struct cudaKernelNodeParams *);
extern tcudaGraphExecKernelNodeSetParams *cudaGraphExecKernelNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecMemcpyNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, const struct cudaMemcpy3DParms *);
extern tcudaGraphExecMemcpyNodeSetParams *cudaGraphExecMemcpyNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecMemcpyNodeSetParamsToSymbol(cudaGraphExec_t, cudaGraphNode_t, const void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaGraphExecMemcpyNodeSetParamsToSymbol *cudaGraphExecMemcpyNodeSetParamsToSymbol;
typedef cudaError_t  CUDAAPI tcudaGraphExecMemcpyNodeSetParamsFromSymbol(cudaGraphExec_t, cudaGraphNode_t, void *, const void *, size_t, size_t, enum cudaMemcpyKind);
extern tcudaGraphExecMemcpyNodeSetParamsFromSymbol *cudaGraphExecMemcpyNodeSetParamsFromSymbol;
typedef cudaError_t  CUDAAPI tcudaGraphExecMemcpyNodeSetParams1D(cudaGraphExec_t, cudaGraphNode_t, void *, const void *, size_t, enum cudaMemcpyKind);
extern tcudaGraphExecMemcpyNodeSetParams1D *cudaGraphExecMemcpyNodeSetParams1D;
typedef cudaError_t  CUDAAPI tcudaGraphExecMemsetNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, const struct cudaMemsetParams *);
extern tcudaGraphExecMemsetNodeSetParams *cudaGraphExecMemsetNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecHostNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, const struct cudaHostNodeParams *);
extern tcudaGraphExecHostNodeSetParams *cudaGraphExecHostNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecChildGraphNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, cudaGraph_t);
extern tcudaGraphExecChildGraphNodeSetParams *cudaGraphExecChildGraphNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecEventRecordNodeSetEvent(cudaGraphExec_t, cudaGraphNode_t, cudaEvent_t);
extern tcudaGraphExecEventRecordNodeSetEvent *cudaGraphExecEventRecordNodeSetEvent;
typedef cudaError_t  CUDAAPI tcudaGraphExecEventWaitNodeSetEvent(cudaGraphExec_t, cudaGraphNode_t, cudaEvent_t);
extern tcudaGraphExecEventWaitNodeSetEvent *cudaGraphExecEventWaitNodeSetEvent;
typedef cudaError_t  CUDAAPI tcudaGraphExecExternalSemaphoresSignalNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, const struct cudaExternalSemaphoreSignalNodeParams *);
extern tcudaGraphExecExternalSemaphoresSignalNodeSetParams *cudaGraphExecExternalSemaphoresSignalNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecExternalSemaphoresWaitNodeSetParams(cudaGraphExec_t, cudaGraphNode_t, const struct cudaExternalSemaphoreWaitNodeParams *);
extern tcudaGraphExecExternalSemaphoresWaitNodeSetParams *cudaGraphExecExternalSemaphoresWaitNodeSetParams;
typedef cudaError_t  CUDAAPI tcudaGraphExecUpdate(cudaGraphExec_t, cudaGraph_t, cudaGraphNode_t *, enum cudaGraphExecUpdateResult *);
extern tcudaGraphExecUpdate *cudaGraphExecUpdate;
typedef cudaError_t  CUDAAPI tcudaGraphUpload(cudaGraphExec_t, cudaStream_t);
extern tcudaGraphUpload *cudaGraphUpload;
typedef cudaError_t  CUDAAPI tcudaGraphLaunch(cudaGraphExec_t, cudaStream_t);
extern tcudaGraphLaunch *cudaGraphLaunch;
typedef cudaError_t  CUDAAPI tcudaGraphExecDestroy(cudaGraphExec_t);
extern tcudaGraphExecDestroy *cudaGraphExecDestroy;
typedef cudaError_t  CUDAAPI tcudaGraphDestroy(cudaGraph_t);
extern tcudaGraphDestroy *cudaGraphDestroy;
typedef cudaError_t  CUDAAPI tcudaGraphDebugDotPrint(cudaGraph_t, const char *, unsigned int);
extern tcudaGraphDebugDotPrint *cudaGraphDebugDotPrint;
typedef cudaError_t  CUDAAPI tcudaUserObjectCreate(cudaUserObject_t *, void *, cudaHostFn_t, unsigned int, unsigned int);
extern tcudaUserObjectCreate *cudaUserObjectCreate;
typedef cudaError_t  CUDAAPI tcudaUserObjectRetain(cudaUserObject_t, unsigned int);
extern tcudaUserObjectRetain *cudaUserObjectRetain;
typedef cudaError_t  CUDAAPI tcudaUserObjectRelease(cudaUserObject_t, unsigned int);
extern tcudaUserObjectRelease *cudaUserObjectRelease;
typedef cudaError_t  CUDAAPI tcudaGraphRetainUserObject(cudaGraph_t, cudaUserObject_t, unsigned int, unsigned int);
extern tcudaGraphRetainUserObject *cudaGraphRetainUserObject;
typedef cudaError_t  CUDAAPI tcudaGraphReleaseUserObject(cudaGraph_t, cudaUserObject_t, unsigned int);
extern tcudaGraphReleaseUserObject *cudaGraphReleaseUserObject;
typedef cudaError_t  CUDAAPI tcudaGetDriverEntryPoint(const char *, void **, unsigned long long);
extern tcudaGetDriverEntryPoint *cudaGetDriverEntryPoint;
typedef cudaError_t  CUDAAPI tcudaGetExportTable(const void **, const cudaUUID_t *);
extern tcudaGetExportTable *cudaGetExportTable;
typedef cudaError_t  CUDAAPI tcudaGetFuncBySymbol(cudaFunction_t *, const void *);
extern tcudaGetFuncBySymbol *cudaGetFuncBySymbol;

#ifdef __cplusplus
}
#endif
